name: Build and publish @prisma/prisma-fmt-wasm

on: workflow_dispatch # triggered manually for now

jobs:
  build:
    name: Build and publish @prisma/prisma-fmt-wasm
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2.3.4

    # Install nix
    # Copy-pasted from https://github.com/marketplace/actions/install-nix
    - uses: cachix/install-nix-action@v14
      with:
        install_url: https://nixos-nix-install-tests.cachix.org/serve/vij683ly7sl95nnhb67bdjjfabclr85m/install
        install_options: '--tarball-url-prefix https://nixos-nix-install-tests.cachix.org/serve'
        extra_nix_config: |
          experimental-features = nix-command flakes
          access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}

    - name: Print input
      env: { THE_INPUT: '${{ toJson(github.event.client_payload) }}' }
      run: |
        echo $THE_INPUT

    # Update the cargo hash
    - run: |
        cd ./build-prisma-fmt
        # Update dependencies (including engines).
        nix run .#cargo update
        # Set up build to fail and output the new hash.
        echo "Setting up falkeSha256"
        sed -i 's/cargoSha256.*/cargoSha256 = fakeSha256;/' flake.nix
        # Extract the new dependencies source hash
        echo "Computing and inserting new cargoHash"
        CARGO_HASH=`nix build 2>&1 1>&2 | grep 'got:.*sha256' | sed 's/.*got:.*sha256/sha256/'`
        echo "New cargo hash: $CARGO_HASH"
        # Put the new cargo hash in flake.nix
        sed -i "s,cargoSha256.*$,cargoSha256 = \"$CARGO_HASH\";," flake.nix

    # Build
    - run: nix build ./build-prisma-fmt

    # Update the npm package version
    - run: |
        cd ./build-prisma-fmt
        nix run .#npm version patch

    # Publish
    - uses: actions/setup-node@v2
      with:
        node-version: '14.x'

    - run: bash .github/workflows/setup.sh
      env:
        CI: true
        NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

    - uses: stefanzweifel/git-auto-commit-action@v4
      with:
        # Optional but recommended, defaults to "Apply automatic changes"
        commit_message: engines commit ${{ github.event.client_payload.commit }}

        # Optional commit user and author settings
        commit_user_name: prisma-bot
        commit_user_email: prismabots@gmail.com
        commit_author: prisma-bot <prismabots@gmail.com>

    - run: npm publish result --access public
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

    - name: Slack Notification on Failure
      if: ${{ failure() }}
      uses: rtCamp/action-slack-notify@v2.2.0
      env:
        SLACK_TITLE: 'prisma-fmt-wasm publishing failed :x:'
        SLACK_COLOR: '#FF0000'
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
